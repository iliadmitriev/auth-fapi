name: CI unittests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]


jobs:
  unittests:

    runs-on: ubuntu-latest

    if: "!contains(github.event.head_commit.message, '#notest')"

    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7, 3.8, 3.9, 3.10.0-alpha.1]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install pip dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Pytest with Coverage
      run: |
        pytest -v --cov=. --cov-report=term-missing --cov-report=html --cov-branch
    - name: Archive code coverage results
      uses: actions/upload-artifact@v2
      with:
        name: code-coverage-report
        path: htmlcov
        retention-days: 3
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
    - name: Check if coverage under 100
      run: |
        coverage report --fail-under=100

