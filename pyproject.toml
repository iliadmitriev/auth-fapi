[tool.poetry]
name = "auth-fapi"
version = "0.1.0"
description = "Auth service for educational purposes"
authors = ["Ilia Dmitriev <ilia.dmitriev@gmail.com>"]
license = "MIT"

[tool.poetry.dependencies]
python = ">=3.9,<4.0"
aiosqlite = "^0.20.0"
asyncmy = "^0.2.9"
asyncpg = "^0.29.0"
fastapi = "^0.115.0"
SQLAlchemy = "^2.0.34"
uvicorn = "^0.31.0"
alembic = "^1.12.1"
greenlet = "^3.1.0"
pydantic = {version = "^2.5", extras = ["email"]}
passlib = "^1.7.4"
python-jose = "^3.3.0"
redis = "^5.1.0"

[tool.poetry.dev-dependencies]
pytest = "^8.3.3"
pytest-asyncio = "^0.24.0"
pytest-cov = "^5.0.0"
asgi-lifespan = "^2.1.0"
httpx = "^0.27.2"
flake8 = "^7.0.0"
flake8-isort = "^6.0.0"
flake8-quotes = "^3.4.0"
flake8-docstrings = "^1.7.0"
flake8-annotations = "^3.1.1"
flake8-comprehensions = "^3.13.0"
black = "^24.8.0"
flake8-polyfill = "^1.0.2"
pep8-naming = "^0.14.1"
pdoc3 = "^0.11.0"

[tool.poetry.group.dev.dependencies]
flake8-pyproject = "^1.2.3"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"


[tool.pytest.ini_options]
asyncio_mode = "auto"
addopts = "-rx -rP -v"


[tool.flake8]
ignore = ["D200", "D107", "I001", "I005",
         "ANN002", "ANN003", "ANN101", "ANN401"]
per-file-ignores = [
    "test_*.py: S101, DAR101, D100",
    "__init__.py: F401",
    "test_*.py: S101, DAR101, D100",
    "*/models/*: N815"
]
max-line-length = 80
exclude = [
    "manage.py",
    "*migrations*",
    "*/tests.py",
    ".git",
    "__pycache__",
    "docs",
    "old",
    "build",
    "dist",
    ".eggs/*",
    "*venv*/*",
    "*/tests/*",
    "*/test_utils/*",
    "*/test_*.py",
    "alembic/*"
]
inline-quotes = "\""
statistics = true
count = true


[tool.isort]
profile = "black"


[tool.coverage.run]
source = ["."]
branch = true
parallel = true
concurrency = ["greenlet"]
omit = [
	"venv/*",
	"tests/*",
	"alembic/versions/*"
]

[tool.coverage.report]
fail_under = 100
show_missing = true

[tool.black]
line-length = 80
experimental-string-processing = true
